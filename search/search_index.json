{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Conference Site","text":"<p>Conference Site is a web application built with Django and PostgreSQL that allows users to register for scientific conferences, leave reviews, and view participant lists. Administrators can manage conference details and presentation results.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>User registration and authentication</li> <li>Browse and register for conferences</li> <li>Edit and delete conference registrations</li> <li>Leave reviews for attended conferences</li> <li>Admin panel for managing conferences and results</li> <li>Pagination and search functionality for conferences</li> <li>Responsive design with Bootstrap</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12</li> <li>PostgreSQL</li> <li>poetry</li> </ul>"},{"location":"#setup","title":"Setup","text":"<ol> <li>Clone the repository:</li> </ol> <p><code>bash    git clone https://github.com/kiraprint/conference-site.git    cd conference-site</code></p> <ol> <li>Create and activate a virtual environment, install all needed libs:</li> </ol> <p><code>bash    poetry shell</code></p> <ol> <li> <p>Configure the database:</p> </li> <li> <p>Create a PostgreSQL database and user.</p> </li> <li> <p>Update the <code>DATABASES</code> settings in <code>conference_site/settings.py</code> with your database credentials.</p> </li> <li> <p>Apply migrations:</p> </li> </ol> <p><code>bash    python manage.py migrate</code></p> <ol> <li>Create a superuser:</li> </ol> <p><code>bash    python manage.py createsuperuser</code></p> <ol> <li>Run the development server:</li> </ol> <p><code>bash    python manage.py runserver</code></p> <ol> <li> <p>Access the application:</p> </li> <li> <p>Open your web browser and go to <code>http://127.0.0.1:8000/</code>.</p> </li> </ol>"},{"location":"#usage","title":"Usage","text":"<ul> <li>Register as a new user or log in if you already have an account.</li> <li>Browse the list of available conferences.</li> <li>Register for conferences you are interested in.</li> <li>Leave reviews for conferences you have attended.</li> <li>Administrators can log in to the admin panel at <code>http://127.0.0.1:8000/admin/</code> to manage conferences and results.</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please fork the repository and submit a pull request with your changes.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"#acknowledgments","title":"Acknowledgments","text":"<ul> <li>Thanks to the Django community for their excellent documentation and resources.</li> <li>Bootstrap for providing a responsive design framework.</li> </ul>"},{"location":"work_steps/","title":"\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0442\u043e\u043c\u0443, \u043a\u0430\u043a \u044f \u0441\u0434\u0435\u043b\u0430\u043b \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0443\u044e","text":""},{"location":"work_steps/#1","title":"\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<ol> <li>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 Django \u0438 \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442:</li> </ol> <p><code>bash    pip install django    django-admin startproject conference_site    cd conference_site</code></p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439:</li> </ol> <p><code>bash    python manage.py startapp conferences</code></p> <ol> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a PostgreSQL:</li> <li> <p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0434\u0440\u0430\u0439\u0432\u0435\u0440 \u0434\u043b\u044f PostgreSQL:</p> <p><code>bash  pip install psycopg2-binary</code></p> </li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 <code>settings.py</code>:</p> <p><code>python  DATABASES = {      'default': {          'ENGINE': 'django.db.backends.postgresql',          'NAME': 'your_db_name',          'USER': 'your_db_user',          'PASSWORD': 'your_db_password',          'HOST': 'localhost',          'PORT': '5432',      }  }</code></p> </li> <li> <p>\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438:</p> </li> </ol> <p><code>bash    python manage.py migrate</code></p>"},{"location":"work_steps/#2","title":"\u0428\u0430\u0433 2: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 <code>conferences/models.py</code>:</li> </ol> <p>```python    from django.db import models    from django.contrib.auth.models import User</p> <p>class Location(models.Model):        name = models.CharField(max_length=255)        address = models.CharField(max_length=255)        description = models.TextField()</p> <p>class Conference(models.Model):        title = models.CharField(max_length=255)        topics = models.TextField()        location = models.ForeignKey(Location, on_delete=models.CASCADE)        start_date = models.DateField()        end_date = models.DateField()        description = models.TextField()</p> <p>class ParticipationCondition(models.Model):        conference = models.OneToOneField(Conference, on_delete=models.CASCADE)        conditions = models.TextField()</p> <p>class Registration(models.Model):        user = models.ForeignKey(User, on_delete=models.CASCADE)        conference = models.ForeignKey(Conference, on_delete=models.CASCADE)        registered_on = models.DateTimeField(auto_now_add=True)</p> <p>class Review(models.Model):        conference = models.ForeignKey(Conference, on_delete=models.CASCADE)        user = models.ForeignKey(User, on_delete=models.CASCADE)        text = models.TextField()        rating = models.IntegerField(choices=[(i, str(i)) for i in range(1, 11)])        date_posted = models.DateTimeField(auto_now_add=True)</p> <p>class PresentationResult(models.Model):        registration = models.OneToOneField(Registration, on_delete=models.CASCADE)        is_recommended_for_publication = models.BooleanField(default=False)    ```</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438:</li> </ol> <p><code>bash    python manage.py makemigrations conferences    python manage.py migrate</code></p>"},{"location":"work_steps/#3","title":"\u0428\u0430\u0433 3: \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438","text":"<ol> <li> <p>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439:</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432 <code>conferences/forms.py</code>:</p> <p>```python  from django import forms  from django.contrib.auth.forms import UserCreationForm  from django.contrib.auth.models import User</p> <p>class UserRegisterForm(UserCreationForm):      email = forms.EmailField(required=True)</p> <pre><code> class Meta:\n     model = User\n     fields = ['username', 'email', 'password1', 'password2']\n</code></pre> <p>```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432 <code>conferences/views.py</code>:</p> <p>```python  from django.shortcuts import render, redirect  from django.contrib import messages  from .forms import UserRegisterForm</p> <p>def register(request):      if request.method == 'POST':          form = UserRegisterForm(request.POST)          if form.is_valid():              form.save()              username = form.cleaned_data.get('username')              messages.success(request, f'Account created for {username}!')              return redirect('login')      else:          form = UserRegisterForm()      return render(request, 'conferences/register.html', {'form': form})  ```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0448\u0430\u0431\u043b\u043e\u043d <code>register.html</code> \u0432 <code>templates/conferences/</code>.</p> </li> </ol>"},{"location":"work_steps/#3_1","title":"\u0428\u0430\u0433 3: \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 (\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u0435)","text":"<ol> <li> <p>\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 (\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u0435):</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e:</p> <p>```python  @login_required  def register_for_conference(request, conference_id):      conference = get_object_or_404(Conference, id=conference_id)      registration, created = Registration.objects.get_or_create(user=request.user, conference=conference)</p> <pre><code> if created:\n     messages.success(request, f'You have successfully registered for {conference.title}.')\n else:\n     messages.info(request, f'You are already registered for {conference.title}.')\n\n return redirect('conference_detail', conference_id=conference_id)\n</code></pre> <p>```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043e\u0442\u043c\u0435\u043d\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438:</p> <p>```python  @login_required  def unregister_from_conference(request, conference_id):      conference = get_object_or_404(Conference, id=conference_id)      registration = Registration.objects.filter(conference=conference, user=request.user).first()</p> <pre><code> if registration:\n     registration.delete()\n     messages.success(request, f'You have successfully unregistered from {conference.title}.')\n else:\n     messages.error(request, 'You are not registered for this conference.')\n\n return redirect('conference_detail', conference_id=conference_id)\n</code></pre> <p>```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b <code>conference_list.html</code> \u0438 <code>conference_detail.html</code> \u0432 <code>templates/conferences/</code>.</p> </li> <li> <p>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432:</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0432 <code>forms.py</code>:</p> <p>```python  from .models import Review</p> <p>class ReviewForm(forms.ModelForm):      class Meta:          model = Review          fields = ['text', 'rating']  ```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430:</p> <p>```python  @login_required  def add_review(request, conference_id):      conference = get_object_or_404(Conference, id=conference_id)      registration = Registration.objects.filter(conference=conference, user=request.user).exists()</p> <pre><code> if not registration:\n     messages.error(request, 'You must be registered and have attended the conference to leave a review.')\n     return redirect('conference_detail', conference_id=conference_id)\n\n if request.method == 'POST':\n     form = ReviewForm(request.POST)\n     if form.is_valid():\n         review = form.save(commit=False)\n         review.conference = conference\n         review.user = request.user\n         review.save()\n         messages.success(request, 'Your review has been added!')\n         return redirect('conference_detail', conference_id=conference_id)\n else:\n     form = ReviewForm()\n return render(request, 'conferences/add_review.html', {'form': form, 'conference': conference})\n</code></pre> <p>```</p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0448\u0430\u0431\u043b\u043e\u043d <code>add_review.html</code> \u0432 <code>templates/conferences/</code>.</p> </li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438:</p> </li> <li> <p>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 <code>admin.py</code>:</p> <p>```python  from django.contrib import admin  from .models import Conference, Location, Registration, PresentationResult</p> <p>@admin.register(Conference)  class ConferenceAdmin(admin.ModelAdmin):      list_display = ('title', 'location', 'start_date', 'end_date')      search_fields = ('title', 'topics')</p> <p>@admin.register(Location)  class LocationAdmin(admin.ModelAdmin):      list_display = ('name', 'address')      search_fields = ('name', 'address')</p> <p>@admin.register(Registration)  class RegistrationAdmin(admin.ModelAdmin):      list_display = ('user', 'conference', 'registered_on')      search_fields = ('user__username', 'conference__title')</p> <p>@admin.register(PresentationResult)  class PresentationResultAdmin(admin.ModelAdmin):      list_display = ('registration', 'is_recommended_for_publication')      list_filter = ('is_recommended_for_publication',)  ```</p> </li> </ol>"},{"location":"work_steps/#4-url-","title":"\u0428\u0430\u0433 4: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 URL-\u0430\u0434\u0440\u0435\u0441\u043e\u0432","text":"<ol> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 URL-\u0430\u0434\u0440\u0435\u0441\u0430 \u0432 <code>urls.py</code> \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f <code>conferences</code>:</li> </ol> <p>```python    from django.urls import path    from django.contrib.auth import views as auth_views    from . import views</p> <p>urlpatterns = [        path('register/', views.register, name='register'),        path('', views.conference_list, name='conference_list'),        path('conference//', views.conference_detail, name='conference_detail'),        path('conference//register/', views.register_for_conference, name='register_for_conference'),        path('conference//unregister/', views.unregister_from_conference, name='unregister_from_conference'),        path('conference//add_review/', views.add_review, name='add_review'),        path('login/', auth_views.LoginView.as_view(template_name='conferences/login.html'), name='login'),        path('logout/', auth_views.LogoutView.as_view(template_name='conferences/logout.html'), name='logout'),    ]    ```"},{"location":"work_steps/#5","title":"\u0428\u0430\u0433 5: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d <code>base_generic.html</code> \u0432 <code>templates</code>:</li> </ol> <p>```html    </p> Conference Site Conference Site <ul> <li> Conferences </li>                    {% if user.is_authenticated %}                        <li>                                 {% csrf_token %}                                Logout </li>                    {% else %}                        <li> Login </li> <li> Register </li>                    {% endif %}                </ul>             {% block content %}            {% endblock %}         <p>```</p> <p>\u0418\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e pygraphviz:</p> <p></p>"}]}